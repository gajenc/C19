name: NPM - Create and publish a package
on:
  push:
    branches: [ main ]
    paths:
    - o2-provider/**
  pull_request:
    branches: [ main ]
    paths:
    - o2-provider/**  

defaults:
  run:
    working-directory: o2-provider

jobs:
  _Run-npm-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Step1 - yarn install
        run: |
          yarn install    

#   _Run-npm-test:
#     runs-on: ubuntu-latest
#     needs: _Run-npm-build
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#         node-version: [12.x, 14.x]
#     steps: 
#       - uses: actions/checkout@v2     
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - uses: actions/download-artifact@main
#         with:
#           name: Step 2 - Publish npm artifacts
#           path: public
#       - name: Step 3 - npm install, and test
#         run: |
#           npm install
#           npm test
#         env:
#           CI: true

  _Build-and-push-image:
    runs-on: ubuntu-latest
    needs: _Run-npm-build 
    permissions: 
      contents: read
      packages: write 
    steps:
      - name: Step 1 -  Start to create Docker Image
        uses: actions/checkout@v2
      - name: Step 2 - Log in to Docker Hub Registry
        uses: actions/docker/login@master
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Step 3 - Bake Docker Image
        uses: actions/docker/cli@master
        with:
          args: build -t .
      - name: Step 4 - Publish docker image to container registry
        uses: actions/docker/cli@master
        with:
          args: push swasthapp/o2-provider:${{ github.ref }}-${{ github.sha }}
